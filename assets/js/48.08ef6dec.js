(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{555:function(s,n,a){"use strict";a.r(n);var e=a(2),l=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("blockquote",[a("p",[s._v("安装软件")])]),s._v(" "),a("h2",{attrs:{id:"mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[s._v("#")]),s._v(" mysql")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("安装mysql")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("搜索镜像  docker search mysql")])]),s._v(" "),a("li",[a("p",[s._v("下载镜像  docker pull mysql:5.7")])]),s._v(" "),a("li",[a("p",[s._v("启动镜像")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("  docker run -p 3306:3306 --name mysql \\\n  -v /mydata/mysql/log:/var/log/mysql \\\n  -v /mydata/mysql/data:/var/lib/mysql \\\n  -v /mydata/mysql/conf:/etc/mysql \\\n  -e MYSQL_ROOT_PASSWORD=root  \\\n  -d mysql:5.7\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[a("p",[s._v("参数说明")]),s._v(" "),a("ul",[a("li",[s._v("-p 3306:3306：将容器的3306端口映射到主机的3306端口")]),s._v(" "),a("li",[s._v("-v /mydata/mysql/conf:/etc/mysql：将配置文件夹挂在到主机")]),s._v(" "),a("li",[s._v("-v /mydata/mysql/log:/var/log/mysql：将日志文件夹挂载到主机")]),s._v(" "),a("li",[s._v("-v /mydata/mysql/data:/var/lib/mysql/：将数据文件夹挂载到主机")]),s._v(" "),a("li",[s._v("-e MYSQL_ROOT_PASSWORD=root：初始化root用户的密码")])])]),s._v(" "),a("li",[a("p",[s._v("进入容器\ndocker exec -it mysql5.7 bash")])]),s._v(" "),a("li",[a("p",[s._v("登录数据库\n使用mysql命令打开客户端：\nmysql -uroot -proot --default-character-set=utf8")])])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("创建mall数据库：\ncreate database mall character set utf8")])]),s._v(" "),a("li",[a("p",[s._v("安装上传下载插件，并将docment/sql/mall.sql上传到Linux服务器上：\nyum -y install lrzsz")])]),s._v(" "),a("li",[a("p",[s._v("将mall.sql文件拷贝到mysql容器的/目录下：\ndocker cp /mydata/mall.sql mysql:/")])]),s._v(" "),a("li",[a("p",[s._v("将sql文件导入到数据库：\nuse xxx;\nsource /xx.sql;")])])]),s._v(" "),a("p",[s._v("mysql -uroot -p\n123456")]),s._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[s._v("创建用户\n创建一个reader帐号并修改权限，使得任何ip都能访问：\ngrant all privileges on "),a("em",[s._v(".")]),s._v(" to 'reader' @'%' identified by '123456';")])]),s._v(" "),a("p",[s._v("create user 'cs' identified with mysql_native_password by 'cs';\ncs 新用户名为cs\nmysql_native_password 密码加密方式为mysql_native_password\ncs 新用户的密码为cs")]),s._v(" "),a("ol",{attrs:{start:"7"}},[a("li",[a("p",[s._v("为新用户zhaoolee增加权限\ngrant all privileges on "),a("em",[s._v(".")]),s._v(" to 'zhaoolee';")])]),s._v(" "),a("li",[a("p",[s._v("刷新权限\nflush privileges;")])]),s._v(" "),a("li",[a("p",[s._v("修改 忽略大小写")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("sudo vi /etc/my.cnf")])]),s._v(" "),a("li",[a("p",[s._v("在[mysql]")])]),s._v(" "),a("li",[a("p",[s._v("lower_case_table_names=1")])])])])]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"oracle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oracle"}},[s._v("#")]),s._v(" oracle")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("安装orcale")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("拉取镜像: docker pull registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g")])]),s._v(" "),a("li",[a("p",[s._v("查看镜像\ndocker images")])]),s._v(" "),a("li",[a("p",[s._v("创建容器")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(" docker run -d –p 1521:1521 --name oracle11g registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g\n 这里说一下，命令后面的地址一定要是你下载的镜像地址也就是你拉取镜像名字，否则会出现名字已存在等问题！\n 如果空间不足可以清理数据：\n 删除所有dangling数据卷（即无用的Volume）：\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[a("p",[s._v("启动容器: docker start oracle11g")])]),s._v(" "),a("li",[a("p",[s._v("进入镜像进行配置")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("进入oracle的命令环境中。")]),s._v(" "),a("p",[s._v("docker exec -it oracle11g bash")])]),s._v(" "),a("li",[a("p",[s._v("切换到oracle数据库的root 用户下")]),s._v(" "),a("p",[s._v("su root\n密码：helowin")])]),s._v(" "),a("li",[a("p",[s._v("编辑profile文件配置ORACLE环境变量")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("export ORACLE_HOME=/home/oracle/app/oracle/product/11.2.0/dbhome_2\nexport ORACLE_SID=helowin\nexport PATH=ORACLEHOME/bin:ORACLE_HOME/bin:PATH\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[a("p",[s._v("创建软连接")]),s._v(" "),a("p",[s._v("ln -s $ORACLE_HOME/bin/sqlplus /usr/bin")])]),s._v(" "),a("li",[a("p",[s._v("切换到oracle 用户")]),s._v(" "),a("p",[s._v("这里还要说一下，一定要写中间的内条 - 必须要，否则软连接无效")])]),s._v(" "),a("li",[a("p",[s._v("登录sqlplus–修改sys、system用户密码–创建用户")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("修改密码：\nalter user system identified by system;\nalter user sys identified by sys;\nALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED;\n创建用户\ncreate user test identified by test;\n并给用户赋予权限\ngrant connect,resource,dba to test;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("远程连接\n"),a("img",{attrs:{src:"http://www.dachui.live/images/docker/docker1.png",alt:""}})])])])])]),s._v(" "),a("h2",{attrs:{id:"nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[s._v("#")]),s._v(" nginx")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("安装nginx")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("使用docker 下载nginx 镜像  docker pull nginx")])]),s._v(" "),a("li",[a("p",[s._v("启动nginx")]),s._v(" "),a("p",[s._v("docker run --name nginx -p 80:80 -d nginx")])]),s._v(" "),a("li",[a("p",[s._v("进入容器：")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker exec -it nginx bash\n\nnginx.conf配置文件在 /etc/nginx/  下面，但是你使用vim nginx.conf 或者vi nginx.conf`\n\n会发现vi或者vim命令没有用，解决办法：apt-get  update  完成之后 apt-get install vim\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[s._v("挂载配置文件")])]),s._v(" "),a("p",[s._v("就是把装有docker宿主机上面的nginx.conf配置文件映射到启动的nginx容器里面，这需要你首先准备好nginx.con配置文件,如果你应经准备好了，下一步是启动nginx")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker run --name nginx -p 80:80 -v /home/docker-nginx/nginx.conf:/etc/nginx/nginx.conf -v /home/docker-nginx/log:/var/log/nginx -v /home/docker-nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf -d nginx\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("解释下上面的命令：")]),s._v(" "),a("p",[s._v("--name  给你启动的容器起个名字，以后可以使用这个名字启动或者停止容器")]),s._v(" "),a("p",[s._v("-p 映射端口，将docker宿主机的80端口和容器的80端口进行绑定")]),s._v(" "),a("p",[s._v("-v 挂载文件用的，第一个-v 表示将你本地的nginx.conf覆盖你要起启动的容器的nginx.conf文件，第二个表示将日志文件进行挂载，就是把nginx服务器的日志写到你docker宿主机的/home/docker-nginx/log/下面")]),s._v(" "),a("p",[s._v("第三个-v 表示的和第一个-v意思一样的。")]),s._v(" "),a("p",[s._v("-d 表示启动的是哪个镜像")]),s._v(" "),a("p",[s._v("我个人更喜欢第二种映射的方式，麻烦的是需要自己准备好nginx.conf 和default.conf文件，我是直接从容器里面复制的，然后根据自己的需要改的")])])])}),[],!1,null,null,null);n.default=l.exports}}]);